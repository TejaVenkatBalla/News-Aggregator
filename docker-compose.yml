version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - redis
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      
    networks:
      - app-network
    restart: unless-stopped
    volumes:
    - ./backend:/app

  celery:
    build: ./backend
    container_name: celery
    command: celery -A celery_config.celery_app worker --loglevel=info
    depends_on:
      - mysql
      - redis
    environment:
      - REDIS_URL=${REDIS_URL}
    networks:
      - app-network
    restart: unless-stopped

  celery_beat:
    build: ./backend
    container_name: celery_beat
    command: celery -A celery_config.celery_app beat --loglevel=info
    depends_on:
      - mysql
      - redis
    environment:
      - REDIS_URL=${REDIS_URL}
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
